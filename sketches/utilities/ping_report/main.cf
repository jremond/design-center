body file control
{
      namespace => "cfdc_ping";
}

bundle agent ping(canon_prefix, hosts, count, report_success, report_failure)
{
  meta:
      "vars[canon_prefix][type]"       string => "NON_EMPTY_STRING";
      "vars[canon_prefix][default]"    string => "__CANON_PREFIX__";

      "vars[hosts][type]"              string => "LIST(NON_EMPTY_STRING)";

      "vars[count][type]"              string => "DIGITS";
      "vars[count][default]"           string => "1";

      "vars[report_success][type]"     string => "BOOLEAN";
      "vars[report_success][default]"  string => "0";

      "vars[report_failure][type]"     string => "BOOLEAN";
      "vars[report_failure][default]"  string => "0";

      "returns[$(hosts)]" string => "BOOLEAN";

  vars:
      "bundle" string => "ping_report";
      "pinger" string => "/bin/ping";
      "ping_count_option" string => "-c";

      "reached[$(hosts)]"
      string => "1",
      ifvarclass => canonify("$(canon_prefix)$(hosts)_reached");

      "reached[$(hosts)]"
      string => "0",
      ifvarclass => not(canonify("$(canon_prefix)$(hosts)_reached"));

  classes:
      "ping_report_success"  expression => strcmp("true", "$(report_success)");
      "ping_report_failure"  expression => strcmp("true", "$(report_failure)");

  commands:
      "$(pinger)"
      args => "$(ping_count_option) $(count) $(hosts)",
      contain => default:silent,
      classes => default:if_repaired("$(canon_prefix)$(hosts)_reached");

  reports:
    cfengine::
      # return values don't work in namespaces
      # "reached[$(hosts)]" bundle_return_value_index => "$(hosts)";

    ping_report_success::
      "I am able to ping $(hosts)",
      ifvarclass => canonify("$(canon_prefix)$(hosts)_reached");

    ping_report_failure::
      "I am unable to ping $(hosts)",
      ifvarclass => not(canonify("$(canon_prefix)$(hosts)_reached"));
}
