body file control
{
      namespace => "cfdc_ipverify";
}

bundle agent maybe_usebundle(ip, maclist, usebundle, arp_command)
{
  meta:
      "vars[ip][type]"              string => "IPv4_ADDRESS";

      "vars[maclist][type]"         string => "LIST(NON_EMPTY_STRING)";

      "vars[usebundle][type]"       string => "NON_EMPTY_STRING";

      "vars[arp_command][type]"     string => "NON_EMPTY_STRING";
      "vars[arp_command][default]"  string => "/usr/sbin/arp";

  vars:
      "pinger" string => "/bin/ping";
      "ping_options" string => "-q -c 1";

    linux::
      "ip_mac_detected"
      string     => execresult("$(arp_command) $(ip)", "useshell"),
      ifvarclass => "can_ping_ip",
      comment    => "If we can ping the ip, get the arp entry";

  classes:
    linux::
      "can_ping_ip"      expression => returnszero("$(pinger) $(ping_options) $(ip) > /dev/null 2>&1", "useshell");
      "ip_has_known_mac" expression => regcmp(".*\s$(maclist)\s.*", "$(ip_mac_detected)");

  methods:
    linux::
      "exec_bundle"
      usebundle => "$(usebundle)",
      ifvarclass => "can_ping_ip.ip_has_known_mac",
      comment    => "Call requested bundle";

  reports:
    default:debug::
      "param_usebundle: $(usebundle)";
      "param_ip: $(ip)";
      "param_mac: $(maclist)";
    (default:debug||default:verbose).can_ping_ip.ip_has_known_mac::
      "calling $(usebundle) because $(ip) has known mac $(ip_mac_detected)";
    (default:debug||default:verbose).!can_ping_ip::
      "IP $(ip) can't be reached";

}
