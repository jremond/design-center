body common control
{
      bundlesequence => { cfsketch_g, cfsketch_run };
      inputs => { @(cfsketch_g.inputs) };
}


# environment common bundles

# environment cf_sketch_testing
bundle common cf_sketch_testing
{
  vars:
      "activated" string => "1";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "1";
      "verbose" string => "1";
  classes:
      "runenv_cf_sketch_testing_activated" expression => "any";
      "runenv_cf_sketch_testing_test" expression => "any";
      "runenv_cf_sketch_testing_verbose" expression => "any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "../../libraries/dclib/library.cf", "../../libraries/copbl/cfengine_stdlib.cf", "main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'metadata' from definition sketch metadata, activation ___001_Applications_Redis_server
      "___001_Applications_Redis_server_metadata[api][address][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][datadir][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][dbfilename][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][glueoutputbuf][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][logfile][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][masterport][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][masterserver][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][metadata][type]" string => "metadata";
      "___001_Applications_Redis_server_metadata[api][pidfile][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][port][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][runenv][type]" string => "environment";
      "___001_Applications_Redis_server_metadata[api][saves][type]" string => "list";
      "___001_Applications_Redis_server_metadata[api][shareobjectspoolsize][type]" string => "string";
      "___001_Applications_Redis_server_metadata[api][timeout][type]" string => "string";
      "___001_Applications_Redis_server_metadata[authors]" slist => { "Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>" };
      "___001_Applications_Redis_server_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___001_Applications_Redis_server_metadata[license]" string => "MIT";
      "___001_Applications_Redis_server_metadata[location]" string => "/home/tzz/.cfagent/inputs/sketches/applications/redis";
      "___001_Applications_Redis_server_metadata[manifest]" slist => { "README.md", "main.cf" };
      "___001_Applications_Redis_server_metadata[manifest_cf]" slist => { "main.cf" };
      "___001_Applications_Redis_server_metadata[manifest_docs]" slist => { "README.md" };
      "___001_Applications_Redis_server_metadata[manifest_exe]" slist => { "cf_null" };
      "___001_Applications_Redis_server_metadata[manifest_extra]" slist => { "cf_null" };
      "___001_Applications_Redis_server_metadata[name]" string => "Applications::Redis";
      "___001_Applications_Redis_server_metadata[tags]" slist => { "cfdc" };
      "___001_Applications_Redis_server_metadata[version]" string => "1";

      # list 'saves' from definition parameter definition from /home/tzz/source/design-center/tools/test/../../sketches/applications/redis/params/demo.json, activation ___001_Applications_Redis_server
      "___001_Applications_Redis_server_saves" slist => { "900 1", "300 10", "60 10000" };

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "cf_sketch_testing" usebundle => "cf_sketch_testing";

    runenv_cf_sketch_testing_activated::
      "___001_Applications_Redis_server" usebundle => cfdc_redis:server("cf_sketch_testing", "default:cfsketch_run.___001_Applications_Redis_server_metadata", "/var/run/redis.pid", "6379", "0.0.0.0", "0", "dump.rdb", "/var/lib/redis", "/var/log/redis/redis.log", "yes", "disabled", "0.0.0.0", "0", @(cfsketch_run.___001_Applications_Redis_server_saves)), ifvarclass => "ubuntu|debian", useresult => "return____001_Applications_Redis_server";

  reports:
    inform_mode::
      "activation ___001_Applications_Redis_server could not run because it requires classes ubuntu|debian" ifvarclass => "inform_mode.!(ubuntu|debian)";
}
